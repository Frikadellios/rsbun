---
import i18next, { t, changeLanguage } from "i18next";
import { Trans, HeadHrefLangs } from "astro-i18next/components";
import "@styles/globals.css";
import { ModeToggle } from "@ui/ModeToggle";
import { Toaster } from "@ui/toaster";
import H1 from "@typography/H1.astro";

changeLanguage("uk");
---

<script is:inline>
	const getThemePreference = () => {
		if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
			return localStorage.getItem('theme');
		}
		return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
	};
	const isDark = getThemePreference() === 'dark';
	document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

	if (typeof localStorage !== 'undefined') {
		const observer = new MutationObserver(() => {
			const isDark = document.documentElement.classList.contains('dark');
			localStorage.setItem('theme', isDark ? 'dark' : 'light');
		});
		observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
	}
</script>

<html lang={i18next.language}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{t("site.title")}</title>
    <meta name="description" content={t("site.description")} />
    <HeadHrefLangs />
  </head>
  <body>
    <ModeToggle client:load />
    <Toaster client:load/>
    <h1>{t("home.title")}</h1>
    <H1>{t("home.title")}</H1>
    <p>
      <Trans i18nKey="home.subtitle">
        This is a <em>more complex</em> string to translate, mixed with <strong
          >html elements
        </strong> such as <a href="https://example.com/">a cool link</a>!
      </Trans>
    </p>
  </body>
</html>